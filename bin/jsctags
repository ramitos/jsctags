#!/usr/bin/env node

var interpolate = require('util').format,
    argv = require('optimist').argv,
    jsctags = require('../'),
    path = require('path'),
    fs = require('fs'),
    async = require('async')

var dir = (function () {
  if(argv.dir) return path.resolve(argv.dir)
  if(argv.file) return path.dirname(argv.file)
  if(argv._.length) return path.dirname(argv._[0])
  return '///null'
})()

var file = (function () {
  if(argv.file) return path.resolve(process.cwd(), argv.file)
  if(argv._.length) return argv._.map(function (file) {
    return path.resolve(process.cwd(), file)
  })
  return interpolate('///null/%s', Math.floor(Math.random()*100))
})()

if(!argv._.length) {
  var content = ''
  var tagsContent = ''

  process.stdin.resume()

  process.stdin.on('data', function (data) {
    content += data
  })

  process.stdin.on('end', function () {
    jsctags(file, dir, content, function (e, tags) {
      if(e) throw e
      tags.tagfile = file
      tags.forEach(function (tag) {
        tag.tagfile = file
      })
      if (argv.f) {
        tagsContent = jsctags.ctags(tags).sort().join('')
      } else {
        tagsContent = JSON.stringify(tags, null, 2)
      }
      if(argv.o) {
        fs.writeFileSync(argv.o, tagsContent)
      } else {
        console.log(tagsContent)
      }
    })
  })
} else {
  var files = Array.isArray(file) ? file : [file]
  async.map(files, function (file, callback) {
    fs.readFile(file, 'utf8', function (e, content) {
      if(e) return callback(e)
      jsctags(file, dir, content, function (e, tags) {
        if(e) return callback(e)
        tags.tagfile = file
        tags.forEach(function (tag) {
          tag.tagfile = file
        })
        return callback(null, tags)
      })
    })
  }, function (e, results) {
    var tagsContent
    if(e) throw e
    if(argv.f) {
      var ctags = Array.prototype.concat.apply([], results.map(jsctags.ctags))
      tagsContent = ctags.sort().join('')
    } else {
      var tags = Array.prototype.concat.apply([], results)
      tagsContent = JSON.stringify(tags, null, 2)
    }
    if(argv.o) {
      fs.writeFileSync(argv.o, tagsContent)
    } else {
      console.log(tagsContent)
    }
  })
}
